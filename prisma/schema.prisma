generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id                 String      @id @default(cuid())
  name               String
  email              String      @unique
  password           String
  stripe_costumer_id String
  createdAt          DateTime    @default(now())
  updatedAt          DateTime    @default(now())
  isUserAdmin        Boolean     @default(false)
  role               role        @relation(fields: [isUserAdmin], references: [admin])
  favorites          favorites[]
  purchase           purchase[]

  @@index([isUserAdmin], map: "user_isUserAdmin_fkey")
}

model product {
  id                String              @id @default(uuid())
  name              String
  brand             String
  price             Float
  image             String
  stripe_id         String
  created_at        DateTime            @default(now())
  favorites         favorites[]
  productOnPurchase productOnPurchase[]
}

model purchase {
  id                      String              @id @default(uuid())
  created_at              DateTime            @default(now())
  userId                  String
  stripePurchaseReference String?
  user                    user                @relation(fields: [userId], references: [id])
  productOnPurchase       productOnPurchase[]

  @@index([userId], map: "purchase_userId_fkey")
}

model favorites {
  id         String   @id @default(uuid())
  created_at DateTime @default(now())
  userId     String
  productId  String
  product    product  @relation(fields: [productId], references: [id])
  user       user     @relation(fields: [userId], references: [id])

  @@index([productId], map: "favorites_productId_fkey")
  @@index([userId], map: "favorites_userId_fkey")
}

model role {
  id    String  @id @default(uuid())
  admin Boolean @unique @default(false)
  user  user[]
}

model productOnPurchase {
  id         String   @id @default(uuid())
  product    product  @relation(fields: [productId], references: [id])
  productId  String
  purchase   purchase @relation(fields: [purchaseId], references: [id])
  purchaseId String
}
